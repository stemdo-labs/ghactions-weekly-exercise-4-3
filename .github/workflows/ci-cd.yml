name: CI-CD

on:
  workflow_call:
    inputs:
      version_name:
        description: 'Version Name'
        type: string
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4     

      - name: Print version
        run: |
          echo "Version: ${{ github.event.inputs.version_name }}"
        
      - name: Install dependencies
        run: npm install 

      - name: Construir aplicaci√≥n de angular
        run: npm run build --prod

      - name: Hacer tests
        run: |
          sleep 5
          echo "Test pasados adecuadamente" 
        if: ${{ github.env == 'production'}}  

      - name: Login en Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Test secrets de docker
        run: |
          echo ${{ secrets.DOCKERHUB_USER }}
          echo ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Construir imagen de Docker y subirla
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ github.event.inputs.docker_username }}/gh_entregable:${{ github.event.inputs.version_name }}

  deployment:
    runs-on: ubuntu-latest
    needs: build
    environment: ${{ github.event.inputs.version_name }}
    steps:

      - name: download image
        run: ${{ github.event.inputs.docker_username  }}/gh_entregable:${{ github.event.inputs.version_name  }}

      - name: docker run
        run: docker run -d -p 8080:80 ${{ github.event.inputs.docker_username  }}/gh_entregable:${{ github.event.inputs.version_name  }}

      - name: curl
        run: curl http://localhost:8080
