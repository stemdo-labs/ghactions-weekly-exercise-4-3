name: CI/CD Reusable

on:
  workflow_call:
    inputs:
      target:  
        description: 'In which environment must this be deployed'
        required: true
        default: 'UAT'
        type: string
      env:
        type: string
        default: 'UAT'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Obtener version de la aplicación
        id: version
        uses: ./.github/actions/get-version/
        with:
          target: ${{ inputs.target }}         

      # - name: Print version
      #   run: |
      #     echo "Version: ${{ steps.version.outputs.version }}"

      - name: Node set-up
        uses: actions/setup-node@v2
        with:
          node-version: '20'
        
      - name: Install dependencies
        run: npm install 

      - name: Construir aplicación de angular
        run: npm run build --prod

      - name: Hacer tests
        run: |
            sleep 5
            echo "Test pasados adecuadamente"   
        if: ${{ inputs.env == 'production'}} 
        
      - name: Login en Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Build y Push
        id: docker-build-push
        uses: ./.github/actions/docker-build-push/
        
  deployment:
    needs: build
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Obtener version de la aplicación
        id: version
        uses: ./.github/actions/get-version/
        with:
          env: 'production'

      - name: download image
        run: docker pull ${{ secrets.DOCKERHUB_USER }}/gh_entregable:${{ steps.version.outputs.version }}

      - name: docker run
        run: docker run -d -p 8080:80 ${{ secrets.DOCKERHUB_USER }}/gh_entregable:${{ steps.version.outputs.version }}

      - name: curl
        run: curl http://localhost:8080
